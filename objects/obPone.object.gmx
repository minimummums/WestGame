<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPoneStand</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack again
attacked = false;
with(obAttack1){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop the pain
hurt= false;
image_alpha = 1;
timetohurtblink = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Swap Done

obPone0.vspeed = 0;
obPone1.vspeed = 0;
obPone2.vspeed = 0;
grounded =false;
global.pause = false;
global.swap = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///States

x=clamp(x, 0, room_width);
y=clamp(y, 0, room_height);

if !(global.pause){
    if(rank == 0){
        if !(keyboard_check(vk_right)||keyboard_check(vk_left)){
            hspeed = 0;
        }
    }else if(rank == 1){
        if((global.rankZero.x-global.rankOne.x)&gt;120||(global.rankZero.x-global.rankOne.x)&lt;-120){
            global.rankOne.hspeed = (global.rankZero.x-global.rankOne.x)/25;
        }else{
            global.rankOne.hspeed = 0;
        }
    }else{
        if((global.rankZero.x-global.rankTwo.x)&gt;220||(global.rankZero.x-global.rankTwo.x)&lt;-220){
            global.rankTwo.hspeed = (global.rankZero.x-global.rankTwo.x)/40;
        }else{
            global.rankTwo.hspeed = 0;
        }
    }
    
    //Animations
    if(attacked){
        sprite_index = sprPoneHit;
    }else if !(grounded){
        sprite_index = sprPoneFall;
    }else if (hspeed &gt; 0||hspeed &lt; 0){
        sprite_index = sprPoneRun;
    }else{
        hspeed = 0;
        sprite_index = sprPoneStand; 
    }
    
    if (hurt){
        if(timetohurtblink &lt; 4){
        image_alpha = 0.5;
        timetohurtblink += 1;
        }else if(timetohurtblink &lt; 8){
        image_alpha = 1;
        timetohurtblink += 1;
        }else{
        timetohurtblink =0;
        }
    }
    
    //Enemy
    if (place_meeting(x, y+vspeed, obEnemies)){
        vspeed = -25;
        hurt = true;
        HP -= 10;
        alarm[1] = room_speed * 3;
    }
    
    //Ground
    if !(place_meeting(x, y+vspeed, obCollision)){
        vspeed += (grav/room_speed);
        grounded = false;
    }else{
        vspeed = 0;
        grounded = true;
    }
    
    //Turning
    if(hspeed &lt; 0){
        image_xscale = 1;
    }else if (hspeed &gt; 0){
        image_xscale = -1;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera Follow
if(rank == 0){
    xV = view_xview[0]+(view_wview[0]/2);
    yV = view_yview[0]+(view_hview[0]/2);
    rt = 5;

    view_xview[0] += (x-xV) / rt;

    view_yview[0] += (y-yV) / rt;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move Right
if!(global.pause){
if(rank == 0){
    hspeed = hspeed + (xSpeed-hspeed)/2;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump
if!(global.pause){
if(rank == 0){
    if(grounded){
        y += 1;
        vspeed -= vSpeed;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move Left    

if!(global.pause){
if(rank == 0){
    hspeed = hspeed + (-xSpeed-hspeed)/2;
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug
HPstat = string(HP);
rk = string(rank);
name = object_get_name(object_index);
zero = string(global.rankZero);

//draw_text(view_xview[0]+100, view_yview[0]+100, "Rank" + rank);
draw_text(x, y-100, "Rank" + rk);
draw_text(x, y-120, name);
draw_text(x, y-140, "rankZero =" + zero);
draw_text(x, y-160, "HP =" + HPstat);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Swap Ranks
if!(global.swap){ 
    if(rank ==0 ){
        rank = 1;
        obPone1.rank = 2;
        obPone2.rank = 0;
    }else if(rank ==1){
        rank = 2;
        obPone1.rank = 0;
        obPone2.rank = 1;
    }else if(rank ==2){
        rank = 0;
        obPone1.rank = 1;
        obPone2.rank = 2;
    }
    
    with(obPone0){
        move_towards_point(obPone1.x, obPone1.y, sqrt(sqr(obPone1.x-obPone0.x)+sqr(obPone1.y-obPone0.y))/5);
    }    
    
    with(obPone1){
        move_towards_point(obPone2.x, obPone2.y, sqrt(sqr(obPone2.x-obPone1.x)+sqr(obPone2.y-obPone1.y))/5);
    }
    
    with(obPone2){
        move_towards_point(obPone0.x, obPone0.y, sqrt(sqr(obPone0.x-obPone2.x)+sqr(obPone0.y-obPone2.y))/5);
    }   
    grounded = false;
    obPone1.grounded = false;
    obPone2.grounded = false;
    alarm_set(0, 5);     
    global.pause = true;
    global.swap = true;
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attack1
if(rank == 0 &amp;&amp; global.pause == false &amp;&amp; attacked == false){
    //Enemy
    instance_create(x+(-image_xscale*40),y,obAttack1)
    attacked = true;
    alarm[2] = room_speed * 0.1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>100,0</point>
    <point>100,84</point>
    <point>0,84</point>
  </PhysicsShapePoints>
</object>
